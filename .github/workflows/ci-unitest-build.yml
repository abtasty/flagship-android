# This is a basic workflow to help you get started with Actions

name: CI UnitTest & Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
      env:
        coverage: 0
        old_coverage: 0
      name: Run Unit Tests
      runs-on: ubuntu-18.04
      #if: "!contains(github.event.head_commit.message, '#ci-auto')"
      if: contains(github.event.head_commit.message, '#ci-auto') == false
      steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Unit tests
        run: bash ./gradlew clean flagship:testDebugUnitTestCoverage
      - name: Coverage
        run: echo ::exportVariable name=coverage::$(grep -Po -m 1 '(?<=class="ctr2">)(.*?)(?=%<)' ./flagship/build/reports/jacoco/testDebugUnitTestCoverage/html/index.html | head -1)
      - name: Old Coverage
        run: echo ::exportVariable name=old_coverage::$(grep -Po -m 1 '(?<=coverage-)(.*?)(?=%25-green)' ./README.md)
      - name: Git update coverage
        if: ${{ env.old_coverage != env.coverage }}
        run: |
          echo $old_coverage
          echo $coverage
          sed -i -e 's/coverage-${{ env.old_coverage }}%25/coverage-${{ env.coverage }}%25/g' ./README.md
          sed -i -e 's/coverage-${{ env.old_coverage }}%25/coverage-${{ env.coverage }}%25/g' ./flagship/README.md
          cat ./README.md
          git remote add github "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
          git config --local user.email "ci@abtasty.com"
          git config --local user.name "CI action"
          git pull github ${GITHUB_REF} --ff-only
          git add .
          git commit -am "Update coverage #ci-auto"
          git push github HEAD:${GITHUB_REF}
      - name: Build
        run: bash ./gradlew flagship:clean flagship:assemble

